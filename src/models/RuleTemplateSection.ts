/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ZoneType } from './ZoneType';
import {
    ZoneTypeFromJSON,
    ZoneTypeFromJSONTyped,
    ZoneTypeToJSON,
} from './ZoneType';

/**
 * 
 * @export
 * @interface RuleTemplateSection
 */
export interface RuleTemplateSection {
    /**
     * 
     * @type {number}
     * @memberof RuleTemplateSection
     */
    zoneId: number;
    /**
     * 
     * @type {string}
     * @memberof RuleTemplateSection
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof RuleTemplateSection
     */
    zoneContent: string;
    /**
     * 
     * @type {ZoneType}
     * @memberof RuleTemplateSection
     */
    zoneType: ZoneType;
}

/**
 * Check if a given object implements the RuleTemplateSection interface.
 */
export function instanceOfRuleTemplateSection(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "zoneId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "zoneContent" in value;
    isInstance = isInstance && "zoneType" in value;

    return isInstance;
}

export function RuleTemplateSectionFromJSON(json: any): RuleTemplateSection {
    return RuleTemplateSectionFromJSONTyped(json, false);
}

export function RuleTemplateSectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleTemplateSection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'zoneId': json['zoneId'],
        'name': json['name'],
        'zoneContent': json['zoneContent'],
        'zoneType': ZoneTypeFromJSON(json['zoneType']),
    };
}

export function RuleTemplateSectionToJSON(value?: RuleTemplateSection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'zoneId': value.zoneId,
        'name': value.name,
        'zoneContent': value.zoneContent,
        'zoneType': ZoneTypeToJSON(value.zoneType),
    };
}

