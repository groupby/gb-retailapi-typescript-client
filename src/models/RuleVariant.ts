/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BoostedProductBucket } from './BoostedProductBucket';
import {
    BoostedProductBucketFromJSON,
    BoostedProductBucketFromJSONTyped,
    BoostedProductBucketToJSON,
} from './BoostedProductBucket';
import type { PinnedRefinement } from './PinnedRefinement';
import {
    PinnedRefinementFromJSON,
    PinnedRefinementFromJSONTyped,
    PinnedRefinementToJSON,
} from './PinnedRefinement';
import type { RangeFilter } from './RangeFilter';
import {
    RangeFilterFromJSON,
    RangeFilterFromJSONTyped,
    RangeFilterToJSON,
} from './RangeFilter';
import type { RuleTemplate } from './RuleTemplate';
import {
    RuleTemplateFromJSON,
    RuleTemplateFromJSONTyped,
    RuleTemplateToJSON,
} from './RuleTemplate';
import type { SearchFilter } from './SearchFilter';
import {
    SearchFilterFromJSON,
    SearchFilterFromJSONTyped,
    SearchFilterToJSON,
} from './SearchFilter';
import type { Sort } from './Sort';
import {
    SortFromJSON,
    SortFromJSONTyped,
    SortToJSON,
} from './Sort';
import type { ValueFilter } from './ValueFilter';
import {
    ValueFilterFromJSON,
    ValueFilterFromJSONTyped,
    ValueFilterToJSON,
} from './ValueFilter';

/**
 * 
 * @export
 * @interface RuleVariant
 */
export interface RuleVariant {
    /**
     * 
     * @type {string}
     * @memberof RuleVariant
     */
    biasingProfileName: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RuleVariant
     */
    includedNavigations: Array<string>;
    /**
     * 
     * @type {RuleTemplate}
     * @memberof RuleVariant
     */
    template: RuleTemplate;
    /**
     * 
     * @type {Array<BoostedProductBucket>}
     * @memberof RuleVariant
     */
    boostedProductBuckets: Array<BoostedProductBucket>;
    /**
     * 
     * @type {Array<PinnedRefinement>}
     * @memberof RuleVariant
     */
    pinnedRefinements: Array<PinnedRefinement>;
    /**
     * 
     * @type {Sort}
     * @memberof RuleVariant
     */
    sort: Sort;
    /**
     * 
     * @type {Array<ValueFilter>}
     * @memberof RuleVariant
     */
    valueFilters: Array<ValueFilter>;
    /**
     * 
     * @type {Array<SearchFilter>}
     * @memberof RuleVariant
     */
    searchFilters: Array<SearchFilter>;
    /**
     * 
     * @type {Array<RangeFilter>}
     * @memberof RuleVariant
     */
    rangeFilters: Array<RangeFilter>;
}

/**
 * Check if a given object implements the RuleVariant interface.
 */
export function instanceOfRuleVariant(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "biasingProfileName" in value;
    isInstance = isInstance && "includedNavigations" in value;
    isInstance = isInstance && "template" in value;
    isInstance = isInstance && "boostedProductBuckets" in value;
    isInstance = isInstance && "pinnedRefinements" in value;
    isInstance = isInstance && "sort" in value;
    isInstance = isInstance && "valueFilters" in value;
    isInstance = isInstance && "searchFilters" in value;
    isInstance = isInstance && "rangeFilters" in value;

    return isInstance;
}

export function RuleVariantFromJSON(json: any): RuleVariant {
    return RuleVariantFromJSONTyped(json, false);
}

export function RuleVariantFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleVariant {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'biasingProfileName': json['biasingProfileName'],
        'includedNavigations': json['includedNavigations'],
        'template': RuleTemplateFromJSON(json['template']),
        'boostedProductBuckets': ((json['boostedProductBuckets'] as Array<any>).map(BoostedProductBucketFromJSON)),
        'pinnedRefinements': ((json['pinnedRefinements'] as Array<any>).map(PinnedRefinementFromJSON)),
        'sort': SortFromJSON(json['sort']),
        'valueFilters': ((json['valueFilters'] as Array<any>).map(ValueFilterFromJSON)),
        'searchFilters': ((json['searchFilters'] as Array<any>).map(SearchFilterFromJSON)),
        'rangeFilters': ((json['rangeFilters'] as Array<any>).map(RangeFilterFromJSON)),
    };
}

export function RuleVariantToJSON(value?: RuleVariant | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'biasingProfileName': value.biasingProfileName,
        'includedNavigations': value.includedNavigations,
        'template': RuleTemplateToJSON(value.template),
        'boostedProductBuckets': ((value.boostedProductBuckets as Array<any>).map(BoostedProductBucketToJSON)),
        'pinnedRefinements': ((value.pinnedRefinements as Array<any>).map(PinnedRefinementToJSON)),
        'sort': SortToJSON(value.sort),
        'valueFilters': ((value.valueFilters as Array<any>).map(ValueFilterToJSON)),
        'searchFilters': ((value.searchFilters as Array<any>).map(SearchFilterToJSON)),
        'rangeFilters': ((value.rangeFilters as Array<any>).map(RangeFilterToJSON)),
    };
}

