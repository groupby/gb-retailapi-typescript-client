/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PriceInfoPriceEffectiveTime } from './PriceInfoPriceEffectiveTime';
import {
    PriceInfoPriceEffectiveTimeFromJSON,
    PriceInfoPriceEffectiveTimeFromJSONTyped,
    PriceInfoPriceEffectiveTimeToJSON,
} from './PriceInfoPriceEffectiveTime';
import type { PriceInfoPriceExpireTime } from './PriceInfoPriceExpireTime';
import {
    PriceInfoPriceExpireTimeFromJSON,
    PriceInfoPriceExpireTimeFromJSONTyped,
    PriceInfoPriceExpireTimeToJSON,
} from './PriceInfoPriceExpireTime';
import type { PriceInfoPriceRange } from './PriceInfoPriceRange';
import {
    PriceInfoPriceRangeFromJSON,
    PriceInfoPriceRangeFromJSONTyped,
    PriceInfoPriceRangeToJSON,
} from './PriceInfoPriceRange';

/**
 * Price info representation.
 * @export
 * @interface PriceInfo
 */
export interface PriceInfo {
    /**
     * Currency code.
     * @type {string}
     * @memberof PriceInfo
     */
    currencyCode?: string;
    /**
     * Price value.
     * @type {number}
     * @memberof PriceInfo
     */
    price?: number;
    /**
     * Original price value.
     * @type {number}
     * @memberof PriceInfo
     */
    originalPrice?: number;
    /**
     * Cost
     * @type {number}
     * @memberof PriceInfo
     */
    cost?: number;
    /**
     * 
     * @type {PriceInfoPriceEffectiveTime}
     * @memberof PriceInfo
     */
    priceEffectiveTime?: PriceInfoPriceEffectiveTime;
    /**
     * 
     * @type {PriceInfoPriceExpireTime}
     * @memberof PriceInfo
     */
    priceExpireTime?: PriceInfoPriceExpireTime;
    /**
     * 
     * @type {PriceInfoPriceRange}
     * @memberof PriceInfo
     */
    priceRange?: PriceInfoPriceRange;
}

/**
 * Check if a given object implements the PriceInfo interface.
 */
export function instanceOfPriceInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PriceInfoFromJSON(json: any): PriceInfo {
    return PriceInfoFromJSONTyped(json, false);
}

export function PriceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'originalPrice': !exists(json, 'originalPrice') ? undefined : json['originalPrice'],
        'cost': !exists(json, 'cost') ? undefined : json['cost'],
        'priceEffectiveTime': !exists(json, 'priceEffectiveTime') ? undefined : PriceInfoPriceEffectiveTimeFromJSON(json['priceEffectiveTime']),
        'priceExpireTime': !exists(json, 'priceExpireTime') ? undefined : PriceInfoPriceExpireTimeFromJSON(json['priceExpireTime']),
        'priceRange': !exists(json, 'priceRange') ? undefined : PriceInfoPriceRangeFromJSON(json['priceRange']),
    };
}

export function PriceInfoToJSON(value?: PriceInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currencyCode': value.currencyCode,
        'price': value.price,
        'originalPrice': value.originalPrice,
        'cost': value.cost,
        'priceEffectiveTime': PriceInfoPriceEffectiveTimeToJSON(value.priceEffectiveTime),
        'priceExpireTime': PriceInfoPriceExpireTimeToJSON(value.priceExpireTime),
        'priceRange': PriceInfoPriceRangeToJSON(value.priceRange),
    };
}

