/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RuleTemplateSection } from './RuleTemplateSection';
import {
    RuleTemplateSectionFromJSON,
    RuleTemplateSectionFromJSONTyped,
    RuleTemplateSectionToJSON,
} from './RuleTemplateSection';

/**
 * 
 * @export
 * @interface RuleTemplate
 */
export interface RuleTemplate {
    /**
     * 
     * @type {string}
     * @memberof RuleTemplate
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof RuleTemplate
     */
    enableExactMatching: boolean;
    /**
     * 
     * @type {Array<RuleTemplateSection>}
     * @memberof RuleTemplate
     */
    sections: Array<RuleTemplateSection>;
}

/**
 * Check if a given object implements the RuleTemplate interface.
 */
export function instanceOfRuleTemplate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "enableExactMatching" in value;
    isInstance = isInstance && "sections" in value;

    return isInstance;
}

export function RuleTemplateFromJSON(json: any): RuleTemplate {
    return RuleTemplateFromJSONTyped(json, false);
}

export function RuleTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleTemplate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'enableExactMatching': json['enableExactMatching'],
        'sections': ((json['sections'] as Array<any>).map(RuleTemplateSectionFromJSON)),
    };
}

export function RuleTemplateToJSON(value?: RuleTemplate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'enableExactMatching': value.enableExactMatching,
        'sections': ((value.sections as Array<any>).map(RuleTemplateSectionToJSON)),
    };
}

