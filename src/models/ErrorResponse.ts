/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Error object returned by the API.
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
    /**
     * Identifier used for tracking purposes.
     * @type {string}
     * @memberof ErrorResponse
     */
    trackingId: string;
    /**
     * HTTP method of the API call which produced the error.
     * @type {string}
     * @memberof ErrorResponse
     */
    method: string;
    /**
     * HTTP path of the API call which produced the error.
     * @type {string}
     * @memberof ErrorResponse
     */
    path: string;
    /**
     * Error message. Ideally human readable string.
     * @type {string}
     * @memberof ErrorResponse
     */
    message: string;
}

/**
 * Check if a given object implements the ErrorResponse interface.
 */
export function instanceOfErrorResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "trackingId" in value;
    isInstance = isInstance && "method" in value;
    isInstance = isInstance && "path" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function ErrorResponseFromJSON(json: any): ErrorResponse {
    return ErrorResponseFromJSONTyped(json, false);
}

export function ErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'trackingId': json['trackingId'],
        'method': json['method'],
        'path': json['path'],
        'message': json['message'],
    };
}

export function ErrorResponseToJSON(value?: ErrorResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'trackingId': value.trackingId,
        'method': value.method,
        'path': value.path,
        'message': value.message,
    };
}

