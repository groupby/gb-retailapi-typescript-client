/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Object with base response information. Contains count of returned suggestions and time spent to handle the request.
 * @export
 * @interface Stats
 */
export interface Stats {
    /**
     * Count of suggested sentences in response.
     * @type {number}
     * @memberof Stats
     */
    searchCount?: number;
    /**
     * Time in milliseconds taken by autocomplete service to handle request and send response.
     * @type {number}
     * @memberof Stats
     */
    autocompleteResponse?: number;
    /**
     * Count of extended attributes in autocomplete response.
     * @type {number}
     * @memberof Stats
     */
    extendedAttributesCount?: number;
    /**
     * Time in milliseconds taken by application to enrich response with extended attributes.
     * @type {number}
     * @memberof Stats
     */
    extendedAttributesResponse?: number;
}

/**
 * Check if a given object implements the Stats interface.
 */
export function instanceOfStats(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StatsFromJSON(json: any): Stats {
    return StatsFromJSONTyped(json, false);
}

export function StatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'searchCount': !exists(json, 'searchCount') ? undefined : json['searchCount'],
        'autocompleteResponse': !exists(json, 'autocompleteResponse') ? undefined : json['autocompleteResponse'],
        'extendedAttributesCount': !exists(json, 'extendedAttributesCount') ? undefined : json['extendedAttributesCount'],
        'extendedAttributesResponse': !exists(json, 'extendedAttributesResponse') ? undefined : json['extendedAttributesResponse'],
    };
}

export function StatsToJSON(value?: Stats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'searchCount': value.searchCount,
        'autocompleteResponse': value.autocompleteResponse,
        'extendedAttributesCount': value.extendedAttributesCount,
        'extendedAttributesResponse': value.extendedAttributesResponse,
    };
}

