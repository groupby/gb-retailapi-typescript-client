/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A custom attribute that is not explicitly modeled in product.
 * @export
 * @interface ProductCustomAttribute
 */
export interface ProductCustomAttribute {
    /**
     * The textual values of this custom attribute. At most 400 values are allowed. Empty values are not allowed. Length limit of 256 characters. Exactly one of text or numbers should be set.
     * @type {Array<string>}
     * @memberof ProductCustomAttribute
     */
    text?: Array<string>;
    /**
     * The numerical values of this custom attribute. At most 400 values are allowed. Exactly one of text or numbers should be set.
     * @type {Array<number>}
     * @memberof ProductCustomAttribute
     */
    numbers?: Array<number>;
    /**
     * If true, custom attribute values are searchable by text queries in. search. Only set if type text set.
     * @type {boolean}
     * @memberof ProductCustomAttribute
     */
    searchable?: boolean;
    /**
     * If true, custom attribute values are indexed, so that it can be filtered, faceted or boosted in search.
     * @type {boolean}
     * @memberof ProductCustomAttribute
     */
    indexable?: boolean;
}

/**
 * Check if a given object implements the ProductCustomAttribute interface.
 */
export function instanceOfProductCustomAttribute(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductCustomAttributeFromJSON(json: any): ProductCustomAttribute {
    return ProductCustomAttributeFromJSONTyped(json, false);
}

export function ProductCustomAttributeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductCustomAttribute {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'text': !exists(json, 'text') ? undefined : json['text'],
        'numbers': !exists(json, 'numbers') ? undefined : json['numbers'],
        'searchable': !exists(json, 'searchable') ? undefined : json['searchable'],
        'indexable': !exists(json, 'indexable') ? undefined : json['indexable'],
    };
}

export function ProductCustomAttributeToJSON(value?: ProductCustomAttribute | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'text': value.text,
        'numbers': value.numbers,
        'searchable': value.searchable,
        'indexable': value.indexable,
    };
}

