/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PriceInfoPriceRangeOriginalPrice } from './PriceInfoPriceRangeOriginalPrice';
import {
    PriceInfoPriceRangeOriginalPriceFromJSON,
    PriceInfoPriceRangeOriginalPriceFromJSONTyped,
    PriceInfoPriceRangeOriginalPriceToJSON,
} from './PriceInfoPriceRangeOriginalPrice';
import type { PriceInfoPriceRangePrice } from './PriceInfoPriceRangePrice';
import {
    PriceInfoPriceRangePriceFromJSON,
    PriceInfoPriceRangePriceFromJSONTyped,
    PriceInfoPriceRangePriceToJSON,
} from './PriceInfoPriceRangePrice';

/**
 * 
 * @export
 * @interface PriceInfoPriceRange
 */
export interface PriceInfoPriceRange {
    /**
     * 
     * @type {PriceInfoPriceRangePrice}
     * @memberof PriceInfoPriceRange
     */
    price?: PriceInfoPriceRangePrice;
    /**
     * 
     * @type {PriceInfoPriceRangeOriginalPrice}
     * @memberof PriceInfoPriceRange
     */
    originalPrice?: PriceInfoPriceRangeOriginalPrice;
}

/**
 * Check if a given object implements the PriceInfoPriceRange interface.
 */
export function instanceOfPriceInfoPriceRange(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PriceInfoPriceRangeFromJSON(json: any): PriceInfoPriceRange {
    return PriceInfoPriceRangeFromJSONTyped(json, false);
}

export function PriceInfoPriceRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceInfoPriceRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'price': !exists(json, 'price') ? undefined : PriceInfoPriceRangePriceFromJSON(json['price']),
        'originalPrice': !exists(json, 'originalPrice') ? undefined : PriceInfoPriceRangeOriginalPriceFromJSON(json['originalPrice']),
    };
}

export function PriceInfoPriceRangeToJSON(value?: PriceInfoPriceRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'price': PriceInfoPriceRangePriceToJSON(value.price),
        'originalPrice': PriceInfoPriceRangeOriginalPriceToJSON(value.originalPrice),
    };
}

