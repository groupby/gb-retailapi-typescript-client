/* tslint:disable */
/* eslint-disable */
/**
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BiasDtoStrengthDto } from './BiasDtoStrengthDto';
import {
    BiasDtoStrengthDtoFromJSON,
    BiasDtoStrengthDtoFromJSONTyped,
    BiasDtoStrengthDtoToJSON,
} from './BiasDtoStrengthDto';

/**
 * Biases the search results to either increase or decrease product relevancy for products that match the given field and content.
 * @export
 * @interface BiasDto
 */
export interface BiasDto {
    /**
     * The field the bias refers to.
     * @type {string}
     * @memberof BiasDto
     */
    field: string;
    /**
     * The content the field must match for the bias to be applied.
     * @type {string}
     * @memberof BiasDto
     */
    content?: string | null;
    /**
     * 
     * @type {BiasDtoStrengthDto}
     * @memberof BiasDto
     */
    strength: BiasDtoStrengthDto;
}

/**
 * Check if a given object implements the BiasDto interface.
 */
export function instanceOfBiasDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "field" in value;
    isInstance = isInstance && "strength" in value;

    return isInstance;
}

export function BiasDtoFromJSON(json: any): BiasDto {
    return BiasDtoFromJSONTyped(json, false);
}

export function BiasDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BiasDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'field': json['field'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'strength': BiasDtoStrengthDtoFromJSON(json['strength']),
    };
}

export function BiasDtoToJSON(value?: BiasDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field': value.field,
        'content': value.content,
        'strength': BiasDtoStrengthDtoToJSON(value.strength),
    };
}

